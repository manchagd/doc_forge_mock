<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="turbo-visit-control" content="reload">
  <title>Action Controller: Exception caught</title>
  <style>
    body {
      background-color: #FAFAFA;
      color: #333;
      color-scheme: light dark;
      supported-color-schemes: light dark;
      margin: 0px;
    }

    body, p, ol, ul, td {
      font-family: helvetica, verdana, arial, sans-serif;
      font-size:   13px;
      line-height: 18px;
    }

    pre {
      font-size: 11px;
      white-space: pre-wrap;
    }

    pre.box {
      border: 1px solid #EEE;
      padding: 10px;
      margin: 0px;
      width: 958px;
    }

    header {
      color: #F0F0F0;
      background: #C00;
      padding: 0.5em 1.5em;
    }

    h1 {
      overflow-wrap: break-word;
      margin: 0.2em 0;
      line-height: 1.1em;
      font-size: 2em;
    }

    h2 {
      color: #C00;
      line-height: 25px;
    }

    code.traces {
      font-size: 11px;
    }

    .response-heading, .request-heading {
      margin-top: 30px;
    }

    .exception-message {
      padding: 8px 0;
    }

    .exception-message .message {
      margin-bottom: 8px;
      line-height: 25px;
      font-size: 1.5em;
      font-weight: bold;
      color: #C00;
    }

    .details {
      border: 1px solid #D0D0D0;
      border-radius: 4px;
      margin: 1em 0px;
      display: block;
      max-width: 978px;
    }

    .summary {
      padding: 8px 15px;
      border-bottom: 1px solid #D0D0D0;
      display: block;
    }

    a.summary {
      color: #F0F0F0;
      text-decoration: none;
      background: #C52F24;
      border-bottom: none;
    }

    .details pre {
      margin: 5px;
      border: none;
    }

    #container {
      box-sizing: border-box;
      width: 100%;
      padding: 0 1.5em;
    }

    .source * {
      margin: 0px;
      padding: 0px;
    }

    .source {
      border: 1px solid #D9D9D9;
      background: #ECECEC;
      max-width: 978px;
    }

    .source pre {
      padding: 10px 0px;
      border: none;
    }

    .source .data {
      font-size: 80%;
      overflow: auto;
      background-color: #FFF;
    }

    .info {
      padding: 0.5em;
    }

    .source .data .line_numbers {
      background-color: #ECECEC;
      color: #555;
      padding: 1em .5em;
      border-right: 1px solid #DDD;
      text-align: right;
    }

    .line {
      padding-left: 10px;
      white-space: pre;
    }

    .line:hover {
      background-color: #F6F6F6;
    }

    .line.active {
      background-color: #FCC;
    }

    .error_highlight {
      display: inline-block;
      background-color: #FF9;
      text-decoration: #F00 wavy underline;
    }

    .error_highlight_tip {
      color: #666;
      padding: 2px 2px;
      font-size: 10px;
    }

    .button_to {
      display: inline-block;
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }

    .hidden {
      display: none;
    }

    .correction {
      list-style-type: none;
    }

    input[type="submit"] {
      color: white;
      background-color: #C00;
      border: none;
      border-radius: 12px;
      box-shadow: 0 3px #F99;
      font-size: 13px;
      font-weight: bold;
      margin: 0;
      padding: 10px 18px;
      cursor: pointer;
      -webkit-appearance: none;
    }
    input[type="submit"]:focus,
    input[type="submit"]:hover {
      opacity: 0.8;
    }
    input[type="submit"]:active {
      box-shadow: 0 2px #F99;
      transform: translateY(1px)
    }

    a { color: #980905; }
    a:visited { color: #666; }
    a.trace-frames {
      color: #666;
      overflow-wrap: break-word;
    }
    a:hover, a.trace-frames.selected { color: #C00; }
    a.summary:hover { color: #FFF; }

    @media (prefers-color-scheme: dark) {
      body {
        background-color: #222;
        color: #ECECEC;
      }

      .details, .summary {
        border-color: #666;
      }

      .source {
        border-color: #555;
        background-color: #333;
      }

      .source .data {
        background: #444;
      }

      .source .data .line_numbers {
        background: #333;
        border-color: #222;
      }

      .line:hover {
        background: #666;
      }

      .line.active {
        background-color: #900;
      }

      .error_highlight {
        color: #333;
      }

      input[type="submit"] {
        box-shadow: 0 3px #800;
      }
      input[type="submit"]:active {
        box-shadow: 0 2px #800;
      }

      a { color: #C00; }
      a.trace-frames { color: #999; }
      a:hover, a.trace-frames.selected { color: #E9382B; }
    }

    
  </style>

  <script>
    var toggle = function(id) {
      document.getElementById(id).classList.toggle('hidden');
      return false;
    }
    var show = function(id) {
      document.getElementById(id).style.display = 'block';
    }
    var hide = function(id) {
      document.getElementById(id).style.display = 'none';
    }
    var toggleSessionDump = function() {
      return toggle('session_dump');
    }
    var toggleEnvDump = function() {
      return toggle('env_dump');
    }
  </script>
</head>
<body>

  <!-- BEGIN /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/diagnostics.html.erb --><header>
  <h1>
    ArgumentError
      in Api::V1::DocumentsController#download
  </h1>
</header>

<main role="main" id="container">
  <!-- BEGIN /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_message_and_suggestions.html.erb -->  <div class="exception-message">
    <div class="message">wrong number of arguments (given 1, expected 0)</div>
  </div>
<!-- END /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_message_and_suggestions.html.erb -->
  <!-- BEGIN /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_actions.html.erb -->
<!-- END /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_actions.html.erb -->

  <!-- BEGIN /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_source.html.erb -->
    <div class="source " id="frame-source-0-0">
      <div class="info">
        Extracted source (around line <strong>#9</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>7</span>
<span>8</span>
<span>9</span>
<span>10</span>
<span>11</span>
<span>12</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      def process
</div><div class="line">        template_id = params[:template_id]
</div><div class="line">
</div><div class="line">        # Seleccionar el archivo de datos seg√∫n el template
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-1">
      <div class="info">
        Extracted source (around line <strong>#252</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>250</span>
<span>251</span>
<span>252</span>
<span>253</span>
<span>254</span>
<span>255</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      set_request!(request)
</div><div class="line">      set_response!(response)
</div><div class="line active">      <span class="error_highlight">process</span>(name)
</div><div class="line">      request.commit_flash
</div><div class="line">      to_a
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-2">
      <div class="info">
        Extracted source (around line <strong>#335</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>333</span>
<span>334</span>
<span>335</span>
<span>336</span>
<span>337</span>
<span>338</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        middleware_stack.build(name) { |env| new.dispatch(name, req, res) }.call req.env
</div><div class="line">      else
</div><div class="line active">        new<span class="error_highlight">.dispatch</span>(name, req, res)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">  end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-3">
      <div class="info">
        Extracted source (around line <strong>#67</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>65</span>
<span>66</span>
<span>67</span>
<span>68</span>
<span>69</span>
<span>70</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">          def dispatch(controller, action, req, res)
</div><div class="line active">            controller<span class="error_highlight">.dispatch</span>(action, req, res)
</div><div class="line">          end
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-4">
      <div class="info">
        Extracted source (around line <strong>#50</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>48</span>
<span>49</span>
<span>50</span>
<span>51</span>
<span>52</span>
<span>53</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          controller = controller req
</div><div class="line">          res        = controller.make_response! req
</div><div class="line active">          <span class="error_highlight">dispatch</span>(controller, params[:action], req, res)
</div><div class="line">        rescue ActionController::RoutingError
</div><div class="line">          if @raise_on_name_error
</div><div class="line">            raise
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-5">
      <div class="info">
        Extracted source (around line <strong>#53</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>51</span>
<span>52</span>
<span>53</span>
<span>54</span>
<span>55</span>
<span>56</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          req.route_uri_pattern = route.path.spec.to_s
</div><div class="line">
</div><div class="line active">          _, headers, _ = response = route.app<span class="error_highlight">.serve</span>(req)
</div><div class="line">
</div><div class="line">          if &quot;pass&quot; == headers[Constants::X_CASCADE]
</div><div class="line">            req.script_name     = script_name
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-6">
      <div class="info">
        Extracted source (around line <strong>#133</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>131</span>
<span>132</span>
<span>133</span>
<span>134</span>
<span>135</span>
<span>136</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">              path_parameters[name.to_sym] = Utils.unescape_uri(val) if val
</div><div class="line">            }
</div><div class="line active">            yield [match_data, path_parameters, r]
</div><div class="line">          }
</div><div class="line">        end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-7">
      <div class="info">
        Extracted source (around line <strong>#126</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>124</span>
<span>125</span>
<span>126</span>
<span>127</span>
<span>128</span>
<span>129</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          routes.sort_by!(&amp;:precedence)
</div><div class="line">
</div><div class="line active">          routes<span class="error_highlight">.each</span> { |r|
</div><div class="line">            match_data = r.path.match(path_info)
</div><div class="line">            path_parameters = {}
</div><div class="line">            match_data.names.each_with_index { |name, i|
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-8">
      <div class="info">
        Extracted source (around line <strong>#126</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>124</span>
<span>125</span>
<span>126</span>
<span>127</span>
<span>128</span>
<span>129</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          routes.sort_by!(&amp;:precedence)
</div><div class="line">
</div><div class="line active">          routes<span class="error_highlight">.each</span> { |r|
</div><div class="line">            match_data = r.path.match(path_info)
</div><div class="line">            path_parameters = {}
</div><div class="line">            match_data.names.each_with_index { |name, i|
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-9">
      <div class="info">
        Extracted source (around line <strong>#34</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">      def serve(req)
</div><div class="line active">        <span class="error_highlight">find_routes</span>(req) do |match, parameters, route|
</div><div class="line">          set_params  = req.path_parameters
</div><div class="line">          path_info   = req.path_info
</div><div class="line">          script_name = req.script_name
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-10">
      <div class="info">
        Extracted source (around line <strong>#896</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>894</span>
<span>895</span>
<span>896</span>
<span>897</span>
<span>898</span>
<span>899</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        req = make_request(env)
</div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
</div><div class="line active">        @router<span class="error_highlight">.serve</span>(req)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def recognize_path(path, environment = {})
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-11">
      <div class="info">
        Extracted source (around line <strong>#102</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>100</span>
<span>101</span>
<span>102</span>
<span>103</span>
<span>104</span>
<span>105</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      vary_resource = resource_for_path(path)
</div><div class="line">
</div><div class="line active">      status, headers, body = @app<span class="error_highlight">.call</span> env
</div><div class="line">
</div><div class="line">      if add_headers
</div><div class="line">        headers = add_headers.merge(headers)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-12">
      <div class="info">
        Extracted source (around line <strong>#15</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>13</span>
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      _, _, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      if env[REQUEST_METHOD] == HEAD
</div><div class="line">        response[2] = Rack::BodyProxy.new([]) do
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-13">
      <div class="info">
        Extracted source (around line <strong>#28</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      @app<span class="error_highlight">.call</span>(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def method_override(env)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-14">
      <div class="info">
        Extracted source (around line <strong>#31</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      _, headers, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      if headers[Constants::X_CASCADE] == &quot;pass&quot;
</div><div class="line">        body.close if body.respond_to?(:close)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-15">
      <div class="info">
        Extracted source (around line <strong>#32</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      @app<span class="error_highlight">.call</span>(env)
</div><div class="line">    rescue Exception =&gt; exception
</div><div class="line">      request = ActionDispatch::Request.new env
</div><div class="line">      backtrace_cleaner = request.get_header(&quot;action_dispatch.backtrace_cleaner&quot;)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-16">
      <div class="info">
        Extracted source (around line <strong>#29</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      if etag_status?(status) &amp;&amp; body.respond_to?(:to_ary) &amp;&amp; !skip_caching?(headers)
</div><div class="line">        body = body.to_ary
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-17">
      <div class="info">
        Extracted source (around line <strong>#43</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>41</span>
<span>42</span>
<span>43</span>
<span>44</span>
<span>45</span>
<span>46</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        response
</div><div class="line">      else
</div><div class="line active">        @app<span class="error_highlight">.call</span>(env)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-18">
      <div class="info">
        Extracted source (around line <strong>#15</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>13</span>
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      _, _, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      if env[REQUEST_METHOD] == HEAD
</div><div class="line">        response[2] = Rack::BodyProxy.new([]) do
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-19">
      <div class="info">
        Extracted source (around line <strong>#31</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      error = nil
</div><div class="line">      result = run_callbacks :call do
</div><div class="line active">        @app<span class="error_highlight">.call</span>(env)
</div><div class="line">      rescue =&gt; error
</div><div class="line">      end
</div><div class="line">      raise error if error
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-20">
      <div class="info">
        Extracted source (around line <strong>#101</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>99</span>
<span>100</span>
<span>101</span>
<span>102</span>
<span>103</span>
<span>104</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">      if callbacks.empty?
</div><div class="line active">        yield if block_given?
</div><div class="line">      else
</div><div class="line">        env = Filters::Environment.new(self, false, nil)
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-21">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      error = nil
</div><div class="line active">      result = <span class="error_highlight">run_callbacks</span> :call do
</div><div class="line">        @app.call(env)
</div><div class="line">      rescue =&gt; error
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-22">
      <div class="info">
        Extracted source (around line <strong>#16</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      state = @executor.run!(reset: true)
</div><div class="line">      begin
</div><div class="line active">        response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">        if env[&quot;action_dispatch.report_exception&quot;]
</div><div class="line">          error = env[&quot;action_dispatch.exception&quot;]
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-23">
      <div class="info">
        Extracted source (around line <strong>#18</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      request = ActionDispatch::Request.new(env)
</div><div class="line active">      return @app<span class="error_highlight">.call</span>(env) unless actionable_request?(request)
</div><div class="line">
</div><div class="line">      ActiveSupport::ActionableError.dispatch(request.params[:error].to_s.safe_constantize, request.params[:action])
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-24">
      <div class="info">
        Extracted source (around line <strong>#31</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      _, headers, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      if headers[Constants::X_CASCADE] == &quot;pass&quot;
</div><div class="line">        body.close if body.respond_to?(:close)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-25">
      <div class="info">
        Extracted source (around line <strong>#32</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      @app<span class="error_highlight">.call</span>(env)
</div><div class="line">    rescue Exception =&gt; exception
</div><div class="line">      request = ActionDispatch::Request.new env
</div><div class="line">      backtrace_cleaner = request.get_header(&quot;action_dispatch.backtrace_cleaner&quot;)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-26">
      <div class="info">
        Extracted source (around line <strong>#41</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>39</span>
<span>40</span>
<span>41</span>
<span>42</span>
<span>43</span>
<span>44</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">          logger.info { started_request_message(request) }
</div><div class="line active">          status, headers, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">          body = ::Rack::BodyProxy.new(body) { finish_request_instrumentation(handle, logger_tag_pop_count) }
</div><div class="line">
</div><div class="line">          if response.frozen?
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-27">
      <div class="info">
        Extracted source (around line <strong>#29</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        end
</div><div class="line">
</div><div class="line active">        <span class="error_highlight">call_app</span>(request, env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      private
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-28">
      <div class="info">
        Extracted source (around line <strong>#96</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>94</span>
<span>95</span>
<span>96</span>
<span>97</span>
<span>98</span>
<span>99</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      req = ActionDispatch::Request.new env
</div><div class="line">      req.remote_ip = GetIp.new(req, check_ip, proxies)
</div><div class="line active">      @app<span class="error_highlight">.call</span>(req.env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # The GetIp class exists as a way to defer processing of the request data into
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-29">
      <div class="info">
        Extracted source (around line <strong>#33</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      req = ActionDispatch::Request.new env
</div><div class="line">      req.request_id = make_request_id(req.headers[@header])
</div><div class="line active">      @app<span class="error_highlight">.call</span>(env).tap { |_status, headers, _body| headers[@header] = req.request_id }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-30">
      <div class="info">
        Extracted source (around line <strong>#24</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      start_time = Utils.clock_time
</div><div class="line active">      _, headers, _ = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      request_time = Utils.clock_time - start_time
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-31">
      <div class="info">
        Extracted source (around line <strong>#29</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          def call(env)
</div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
</div><div class="line active">            response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
</div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
</div><div class="line">            end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-32">
      <div class="info">
        Extracted source (around line <strong>#61</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>59</span>
<span>60</span>
<span>61</span>
<span>62</span>
<span>63</span>
<span>64</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      response = nil
</div><div class="line">      events = @subscriber.collect_events do
</div><div class="line active">        response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      headers = response[1]
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-33">
      <div class="info">
        Extracted source (around line <strong>#26</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        events = []
</div><div class="line">        ActiveSupport::IsolatedExecutionState[KEY] = events
</div><div class="line active">        yield
</div><div class="line">        events
</div><div class="line">      ensure
</div><div class="line">        ActiveSupport::IsolatedExecutionState.delete(KEY)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-34">
      <div class="info">
        Extracted source (around line <strong>#60</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>58</span>
<span>59</span>
<span>60</span>
<span>61</span>
<span>62</span>
<span>63</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      response = nil
</div><div class="line active">      events = @subscriber<span class="error_highlight">.collect_events</span> do
</div><div class="line">        response = @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-35">
      <div class="info">
        Extracted source (around line <strong>#16</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      state = @executor.run!(reset: true)
</div><div class="line">      begin
</div><div class="line active">        response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">        if env[&quot;action_dispatch.report_exception&quot;]
</div><div class="line">          error = env[&quot;action_dispatch.exception&quot;]
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-36">
      <div class="info">
        Extracted source (around line <strong>#27</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      @file_handler.attempt(env) || @app<span class="error_highlight">.call</span>(env)
</div><div class="line">    end
</div><div class="line">  end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-37">
      <div class="info">
        Extracted source (around line <strong>#114</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>112</span>
<span>113</span>
<span>114</span>
<span>115</span>
<span>116</span>
<span>117</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      _, headers, body = response = @app<span class="error_highlight">.call</span>(env)
</div><div class="line">
</div><div class="line">      if body.respond_to?(:to_path)
</div><div class="line">        case type = variation(env)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-38">
      <div class="info">
        Extracted source (around line <strong>#143</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>141</span>
<span>142</span>
<span>143</span>
<span>144</span>
<span>145</span>
<span>146</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      if hosts.empty? || excluded?(request)
</div><div class="line">        mark_as_authorized(request)
</div><div class="line active">        @app<span class="error_highlight">.call</span>(env)
</div><div class="line">      else
</div><div class="line">        env[&quot;action_dispatch.blocked_hosts&quot;] = hosts
</div><div class="line">        @response_app.call(env)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-39">
      <div class="info">
        Extracted source (around line <strong>#102</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>100</span>
<span>101</span>
<span>102</span>
<span>103</span>
<span>104</span>
<span>105</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      vary_resource = resource_for_path(path)
</div><div class="line">
</div><div class="line active">      status, headers, body = @app<span class="error_highlight">.call</span> env
</div><div class="line">
</div><div class="line">      if add_headers
</div><div class="line">        headers = add_headers.merge(headers)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-40">
      <div class="info">
        Extracted source (around line <strong>#535</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>533</span>
<span>534</span>
<span>535</span>
<span>536</span>
<span>537</span>
<span>538</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      req = build_request env
</div><div class="line active">      app<span class="error_highlight">.call</span> req.env
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Defines additional Rack env configuration that is added on each call.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-41">
      <div class="info">
        Extracted source (around line <strong>#279</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>277</span>
<span>278</span>
<span>279</span>
<span>280</span>
<span>281</span>
<span>282</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      def call(env)
</div><div class="line">        env[Const::PUMA_CONFIG] = @config
</div><div class="line active">        @app<span class="error_highlight">.call</span>(env)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-42">
      <div class="info">
        Extracted source (around line <strong>#99</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>97</span>
<span>98</span>
<span>99</span>
<span>100</span>
<span>101</span>
<span>102</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        if @supported_http_methods == :any || @supported_http_methods.key?(env[REQUEST_METHOD])
</div><div class="line">          status, headers, app_body = @thread_pool.with_force_shutdown do
</div><div class="line active">            @app<span class="error_highlight">.call</span>(env)
</div><div class="line">          end
</div><div class="line">        else
</div><div class="line">          @log_writer.log &quot;Unsupported HTTP method used: #{env[REQUEST_METHOD]}&quot;
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-43">
      <div class="info">
        Extracted source (around line <strong>#390</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>388</span>
<span>389</span>
<span>390</span>
<span>391</span>
<span>392</span>
<span>393</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        t[:with_force_shutdown] = true
</div><div class="line">      end
</div><div class="line active">      yield
</div><div class="line">    ensure
</div><div class="line">      t[:with_force_shutdown] = false
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-44">
      <div class="info">
        Extracted source (around line <strong>#98</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>96</span>
<span>97</span>
<span>98</span>
<span>99</span>
<span>100</span>
<span>101</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      begin
</div><div class="line">        if @supported_http_methods == :any || @supported_http_methods.key?(env[REQUEST_METHOD])
</div><div class="line active">          status, headers, app_body = @thread_pool<span class="error_highlight">.with_force_shutdown</span> do
</div><div class="line">            @app.call(env)
</div><div class="line">          end
</div><div class="line">        else
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-45">
      <div class="info">
        Extracted source (around line <strong>#472</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>470</span>
<span>471</span>
<span>472</span>
<span>473</span>
<span>474</span>
<span>475</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        while true
</div><div class="line">          @requests_count += 1
</div><div class="line active">          case <span class="error_highlight">handle_request</span>(client, requests + 1)
</div><div class="line">          when false
</div><div class="line">            break
</div><div class="line">          when :async
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-46">
      <div class="info">
        Extracted source (around line <strong>#254</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>252</span>
<span>253</span>
<span>254</span>
<span>255</span>
<span>256</span>
<span>257</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      @status = :run
</div><div class="line">
</div><div class="line active">      @thread_pool = ThreadPool.new(thread_name, options) { |client| <span class="error_highlight">process_client</span> client }
</div><div class="line">
</div><div class="line">      if @queue_requests
</div><div class="line">        @reactor = Reactor.new(@io_selector_backend) { |c| reactor_wakeup c }
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-0-47">
      <div class="info">
        Extracted source (around line <strong>#167</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>165</span>
<span>166</span>
<span>167</span>
<span>168</span>
<span>169</span>
<span>170</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">          begin
</div><div class="line active">            @out_of_band_pending = true if block<span class="error_highlight">.call</span>(work)
</div><div class="line">          rescue Exception =&gt; e
</div><div class="line">            STDERR.puts &quot;Error reached top of thread-pool: #{e.message} (#{e.class})&quot;
</div><div class="line">          end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
<!-- END /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_source.html.erb -->
  <!-- BEGIN /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb -->
<p><code>Rails.root: /Users/danielgd/workspace/doc_forge_mock</code></p>

<div id="traces-0">
    <a href="#" onclick="hide(&#39;Framework-Trace-0&#39;);hide(&#39;Full-Trace-0&#39;);show(&#39;Application-Trace-0&#39;);; return false;">Application Trace</a> |
    <a href="#" onclick="hide(&#39;Application-Trace-0&#39;);hide(&#39;Full-Trace-0&#39;);show(&#39;Framework-Trace-0&#39;);; return false;">Framework Trace</a> |
    <a href="#" onclick="hide(&#39;Application-Trace-0&#39;);hide(&#39;Framework-Trace-0&#39;);show(&#39;Full-Trace-0&#39;);; return false;">Full Trace</a> 

    <div id="Application-Trace-0" style="display: block;">
      <code class="traces">
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="0" href="#">
            app/controllers/api/v1/documents_controller.rb:9:in `process&#39;
          </a>
          <br>
      </code>
    </div>
    <div id="Framework-Trace-0" style="display: none;">
      <code class="traces">
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="1" href="#">
            actionpack (7.2.2.1) lib/action_controller/metal.rb:252:in `dispatch&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="2" href="#">
            actionpack (7.2.2.1) lib/action_controller/metal.rb:335:in `dispatch&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="3" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/routing/route_set.rb:67:in `dispatch&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="4" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/routing/route_set.rb:50:in `serve&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="5" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:53:in `block in serve&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="6" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:133:in `block in find_routes&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="7" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:126:in `each&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="8" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:126:in `find_routes&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="9" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:34:in `serve&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="10" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/routing/route_set.rb:896:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="11" href="#">
            rack-cors (2.0.2) lib/rack/cors.rb:102:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="12" href="#">
            rack (3.1.12) lib/rack/head.rb:15:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="13" href="#">
            rack (3.1.12) lib/rack/method_override.rb:28:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="14" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:31:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="15" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/show_exceptions.rb:32:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="16" href="#">
            rack (3.1.12) lib/rack/etag.rb:29:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="17" href="#">
            rack (3.1.12) lib/rack/conditional_get.rb:43:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="18" href="#">
            rack (3.1.12) lib/rack/head.rb:15:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="19" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/callbacks.rb:31:in `block in call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="20" href="#">
            activesupport (7.2.2.1) lib/active_support/callbacks.rb:101:in `run_callbacks&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="21" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/callbacks.rb:30:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="22" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/executor.rb:16:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="23" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/actionable_exceptions.rb:18:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="24" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:31:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="25" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/show_exceptions.rb:32:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="26" href="#">
            railties (7.2.2.1) lib/rails/rack/logger.rb:41:in `call_app&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="27" href="#">
            railties (7.2.2.1) lib/rails/rack/logger.rb:29:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="28" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/remote_ip.rb:96:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="29" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/request_id.rb:33:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="30" href="#">
            rack (3.1.12) lib/rack/runtime.rb:24:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="31" href="#">
            activesupport (7.2.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="32" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/server_timing.rb:61:in `block in call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="33" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="34" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/server_timing.rb:60:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="35" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/executor.rb:16:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="36" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/static.rb:27:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="37" href="#">
            rack (3.1.12) lib/rack/sendfile.rb:114:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="38" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/host_authorization.rb:143:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="39" href="#">
            rack-cors (2.0.2) lib/rack/cors.rb:102:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="40" href="#">
            railties (7.2.2.1) lib/rails/engine.rb:535:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="41" href="#">
            puma (6.6.0) lib/puma/configuration.rb:279:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="42" href="#">
            puma (6.6.0) lib/puma/request.rb:99:in `block in handle_request&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="43" href="#">
            puma (6.6.0) lib/puma/thread_pool.rb:390:in `with_force_shutdown&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="44" href="#">
            puma (6.6.0) lib/puma/request.rb:98:in `handle_request&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="45" href="#">
            puma (6.6.0) lib/puma/server.rb:472:in `process_client&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="46" href="#">
            puma (6.6.0) lib/puma/server.rb:254:in `block in run&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="47" href="#">
            puma (6.6.0) lib/puma/thread_pool.rb:167:in `block in spawn_thread&#39;
          </a>
          <br>
      </code>
    </div>
    <div id="Full-Trace-0" style="display: none;">
      <code class="traces">
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="0" href="#">
            app/controllers/api/v1/documents_controller.rb:9:in `process&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="1" href="#">
            actionpack (7.2.2.1) lib/action_controller/metal.rb:252:in `dispatch&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="2" href="#">
            actionpack (7.2.2.1) lib/action_controller/metal.rb:335:in `dispatch&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="3" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/routing/route_set.rb:67:in `dispatch&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="4" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/routing/route_set.rb:50:in `serve&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="5" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:53:in `block in serve&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="6" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:133:in `block in find_routes&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="7" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:126:in `each&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="8" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:126:in `find_routes&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="9" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/journey/router.rb:34:in `serve&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="10" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/routing/route_set.rb:896:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="11" href="#">
            rack-cors (2.0.2) lib/rack/cors.rb:102:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="12" href="#">
            rack (3.1.12) lib/rack/head.rb:15:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="13" href="#">
            rack (3.1.12) lib/rack/method_override.rb:28:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="14" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:31:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="15" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/show_exceptions.rb:32:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="16" href="#">
            rack (3.1.12) lib/rack/etag.rb:29:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="17" href="#">
            rack (3.1.12) lib/rack/conditional_get.rb:43:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="18" href="#">
            rack (3.1.12) lib/rack/head.rb:15:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="19" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/callbacks.rb:31:in `block in call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="20" href="#">
            activesupport (7.2.2.1) lib/active_support/callbacks.rb:101:in `run_callbacks&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="21" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/callbacks.rb:30:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="22" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/executor.rb:16:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="23" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/actionable_exceptions.rb:18:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="24" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/debug_exceptions.rb:31:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="25" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/show_exceptions.rb:32:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="26" href="#">
            railties (7.2.2.1) lib/rails/rack/logger.rb:41:in `call_app&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="27" href="#">
            railties (7.2.2.1) lib/rails/rack/logger.rb:29:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="28" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/remote_ip.rb:96:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="29" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/request_id.rb:33:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="30" href="#">
            rack (3.1.12) lib/rack/runtime.rb:24:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="31" href="#">
            activesupport (7.2.2.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="32" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/server_timing.rb:61:in `block in call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="33" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/server_timing.rb:26:in `collect_events&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="34" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/server_timing.rb:60:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="35" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/executor.rb:16:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="36" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/static.rb:27:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="37" href="#">
            rack (3.1.12) lib/rack/sendfile.rb:114:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="38" href="#">
            actionpack (7.2.2.1) lib/action_dispatch/middleware/host_authorization.rb:143:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="39" href="#">
            rack-cors (2.0.2) lib/rack/cors.rb:102:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="40" href="#">
            railties (7.2.2.1) lib/rails/engine.rb:535:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="41" href="#">
            puma (6.6.0) lib/puma/configuration.rb:279:in `call&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="42" href="#">
            puma (6.6.0) lib/puma/request.rb:99:in `block in handle_request&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="43" href="#">
            puma (6.6.0) lib/puma/thread_pool.rb:390:in `with_force_shutdown&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="44" href="#">
            puma (6.6.0) lib/puma/request.rb:98:in `handle_request&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="45" href="#">
            puma (6.6.0) lib/puma/server.rb:472:in `process_client&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="46" href="#">
            puma (6.6.0) lib/puma/server.rb:254:in `block in run&#39;
          </a>
          <br>
          <a class="trace-frames trace-frames-0" data-exception-object-id="23160" data-frame-id="47" href="#">
            puma (6.6.0) lib/puma/thread_pool.rb:167:in `block in spawn_thread&#39;
          </a>
          <br>
      </code>
    </div>

  <script>
    (function() {
      var traceFrames = document.getElementsByClassName('trace-frames-0');
      var selectedFrame, currentSource = document.getElementById('frame-source-0-0');

      // Add click listeners for all stack frames
      for (var i = 0; i < traceFrames.length; i++) {
        traceFrames[i].addEventListener('click', function(e) {
          e.preventDefault();
          var target = e.target;
          var frame_id = target.dataset.frameId;

          if (selectedFrame) {
            selectedFrame.className = selectedFrame.className.replace("selected", "");
          }

          target.className += " selected";
          selectedFrame = target;

          // Change the extracted source code
          changeSourceExtract(frame_id);
        });

        function changeSourceExtract(frame_id) {
          var el = document.getElementById('frame-source-0-' + frame_id);
          if (currentSource && el) {
            currentSource.className += " hidden";
            el.className = el.className.replace(" hidden", "");
            currentSource = el;
          }
        }
      }
    })();
  </script>
</div>
<!-- END /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb -->



  <!-- BEGIN /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb --><h2 class="request-heading">Request</h2>
  <p><b>Parameters</b>:</p> <pre>None</pre>

<div class="details">
  <div class="summary"><a href="#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
  <div id="session_dump" class="hidden"><pre></pre></div>
</div>

<div class="details">
  <div class="summary"><a href="#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
  <div id="env_dump" class="hidden"><pre>GATEWAY_INTERFACE: &quot;CGI/1.2&quot;
HTTP_ACCEPT: &quot;*/*&quot;
HTTP_VERSION: &quot;HTTP/1.1&quot;
ORIGINAL_SCRIPT_NAME: &quot;&quot;
REMOTE_ADDR: &quot;::1&quot;
SERVER_NAME: &quot;localhost&quot;
SERVER_PROTOCOL: &quot;HTTP/1.1&quot;</pre></div>
</div>

<h2 class="response-heading">Response</h2>
<p><b>Headers</b>:</p> <pre>None</pre>
<!-- END /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb -->
</main>
<!-- END /Users/danielgd/.rvm/gems/ruby-3.1.2/gems/actionpack-7.2.2.1/lib/action_dispatch/middleware/templates/rescues/diagnostics.html.erb -->

</body>
</html>
